version: '3.8'

services:
  travel-list:
    image: ghcr.io/padenj/travel-list:latest
    environment:
      # Configurable runtime port, default 3000
      - NODE_ENV=production
      - PORT=${PORT:-3000}
      - DB_FILE=/data/travel-list.sqlite
    # Bind-mount a host directory to persist the SQLite DB. Replace the host path
    # below when you copy this into Portainer, for example: /srv/travel-list/db:/data
    volumes:
      - ./data:/data
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${PORT:-3000}/ || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # One-shot migration helper. Use this with `docker compose run --rm migrate`
  migrate:
    image: ghcr.io/padenj/travel-list:latest
    environment:
      - NODE_ENV=production
      - DB_FILE=/data/travel-list.sqlite
      - PORT=${PORT:-3000}
    volumes:
      - ./data:/data
    entrypoint: ["/bin/sh", "-c", "node server/migrations/run-migrations-knex.cjs up || true"]
    restart: 'no'

  # Placeholder for an external tunnel / proxy if you want to attach one
  cloudflared:
    image: cloudflare/cloudflared:2024.3.0
    command: tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}
    environment:
      - CLOUDFLARED_TOKEN=${CLOUDFLARED_TOKEN}
    restart: unless-stopped

volumes:
  data:

# Usage notes:
# - The stack pulls the image from GitHub Container Registry: ghcr.io/padenj/travel-list:latest
# - The SQLite DB inside the container is at /data/travel-list.sqlite. Bind-mount a host
#   directory to ./data (or change the left-hand side to an absolute host path) to persist data.
# - Configure the exposed port by setting the PORT variable when creating the stack in Portainer.
#   Port mapping uses the same port on host and container by default (e.g. 3000:3000).
